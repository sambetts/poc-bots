// <auto-generated />
using System;
using BastardBot.Common.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BastardBot.Common.Migrations
{
    [DbContext(typeof(BastardDBContext))]
    [Migration("20200504125033_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BastardBot.Common.DB.DialogPhrase", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("Text")
                        .IsUnique()
                        .HasFilter("[Text] IS NOT NULL");

                    b.ToTable("ChatPhrases");
                });

            modelBuilder.Entity("BastardBot.Common.DB.Insult", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ParentResponseID")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("ParentResponseID");

                    b.HasIndex("Text")
                        .IsUnique()
                        .HasFilter("[Text] IS NOT NULL");

                    b.ToTable("NewInsults");
                });

            modelBuilder.Entity("BastardBot.Common.DB.InsultResponse", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("Text")
                        .IsUnique()
                        .HasFilter("[Text] IS NOT NULL");

                    b.ToTable("NewResponses");
                });

            modelBuilder.Entity("BastardBot.Common.DB.PhraseCategory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("Text")
                        .IsUnique()
                        .HasFilter("[Text] IS NOT NULL");

                    b.ToTable("ChatPhraseCategories");
                });

            modelBuilder.Entity("BastardBot.Common.DB.DialogPhrase", b =>
                {
                    b.HasOne("BastardBot.Common.DB.PhraseCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID");
                });

            modelBuilder.Entity("BastardBot.Common.DB.Insult", b =>
                {
                    b.HasOne("BastardBot.Common.DB.InsultResponse", "ParentResponse")
                        .WithMany("InsultTriggers")
                        .HasForeignKey("ParentResponseID");
                });
#pragma warning restore 612, 618
        }
    }
}
